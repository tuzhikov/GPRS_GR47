A51 MACRO ASSEMBLER  L51_BANK                                                             10/13/2015 11:10:34 PAGE     1


MACRO ASSEMBLER A51 V8.02a
OBJECT MODULE PLACED IN L51_BANK.OBJ
ASSEMBLER INVOKED BY: C:\Keil\C51\BIN\A51.EXE L51_BANK.A51 XR GEN DB EP NOMOD51

LOC  OBJ            LINE     SOURCE

                       1     $nomod51  NOLINES
                       2     $nocond 
                       3     ;------------------------------------------------------------------------------
                       4     ;  This file is part of the BL51 / LX51 Banked Linker/Locater package
                       5     ;  Copyright (c) 1988 - 2000 Keil Elektronik GmbH and Keil Software, Inc.
                       6     ;  Version 2.08 (Code and Variable Banking for Classic 8051 Derivatives)
                       7     ;------------------------------------------------------------------------------
                       8     ;************************ Configuration Section *******************************
  0004                 9     ?B_NBANKS       EQU  4    ; Define max. Number of Banks                       *
                      10     ;                         ; The following values are allowed: 2, 4, 8, 16, 32 *
                      11     ;                         ; the max. value for ?B_BANKS is 32                 *
                      12     ;                                                                             *
  0004                13     ?B_MODE         EQU  4    ; 0 for Bank-Switching via 8051 Port                *
                      14     ;                         ; 1 for Bank-Switching via XDATA Port               *
                      15     ;                         ; 4 for user-provided bank switch code              *
                      16     ;                                                                             *
  0000                17     ?B_RTX          EQU  0    ; 0 for applications without RTX-51 FULL            *
                      18     ;                         ; 1 for applications using RTX-51 FULL              *
                      19     ;                                                                             *
  0000                20     ?B_VAR_BANKING  EQU  0    ; Enable Variable Banking in XDATA and CODE memory  *
                      21     ;                         ; 0 Variable Banking is disabled                    *
                      22     ;                         ; 1 XDATA and CODE banking with same address lines  *
                      23     ;                         ; 2 XDATA uses a different banking port             *
                      24     ; Note Variable Banking is only supported with the LX51 linker/locater        *
                      25     ;                                                                             *
  00FF                26     ?B_RST_BANK     EQU  0FFh ; specifies the active code bank number after CPU   *
                      27     ;                         ; Reset.  Used to reduce the entries in the         *
                      28     ;                         ; INTERBANK CALL TABLE.  The value 0xFF disables    *
                      29     ;                         ; this LX51 linker/locater optimization.            *
                      30     ; Note interbank call table optimization is only possible with LX51.          *
                      31     ;                                                                             *
                      32     ;-----------------------------------------------------------------------------*
                      33     ;                                                                             *
                      34     IF  ?B_MODE = 4;                                                              *
                      35     ;-----------------------------------------------------------------------------*
                      36     ; if ?BANK?MODE is 4 define the following switch macros                       *
                      37     ; For bank switching via user-provided bank switch code you must define for   *
                      38     ; each memory bank a own macro which contains the bank switch code.  The      *
                      39     ; following example shows how to use the I/O lines P1.4 and P1.7 for bank     *
                      40     ; switching.  Since you can select just 4 banks with two address lines, just  *
                      41     ; four macros are defined.  The number of macros must conform with the number *
                      42     ; ?B_NBANKS number, i.e. for an application with 16 memory banks you must     *
                      43     ; define 16 macros.                                                           *
                      44     ;                                                                             *
                      45     ; IMPORTANT NOTES:                                                            *
                      46     ; 1.  Eeach SWITCH macro must generate the same code size, otherwise the      *
                      47     ;     BANKSWITCH code does not work correctly.                                *
                      48     ; 2.  The bankswitch logic must be initialized before using it. Please add    *
                      49     ;     the following two lines of code at the end of the STARTUP.A51 file:     *
                      50     ;                :                                                            *
                      51     ;      EXTRN CODE (?B_SWITCH0)
                      52     ;               CALL    ?B_SWITCH0    ; init bank mechanism to code bank 0
                      53     ;               LJMP    ?C_START      ; line already exits at the end of file *
                      54     ;                :                                                            *
                      55     ; 3.  If you are using the RTX-51 real-time operating system this banking     *
                      56     ;     mode cannot be used.                                                    *
                      57     ;                                                                             *
  00B1                58     PSBANK          DATA    0B1H           ; PSBANK Address                       *
A51 MACRO ASSEMBLER  L51_BANK                                                             10/13/2015 11:10:34 PAGE     2

                      59     ;                                                                             *
                      60     SWITCH0         MACRO                  ; Switch to Memory Bank #0             *
                      61                     MOV     PSBANK, #00h   ; Set PSBANK                           *
                      62                     ENDM                                                          *
                      63     ;                                                                             *
                      64     SWITCH1         MACRO                  ; Switch to Memory Bank #1             *
                      65                     MOV     PSBANK, #11h   ; Set PSBANK                           *
                      66                     ENDM                                                          *
                      67     ;                                                                             *
                      68     SWITCH2         MACRO                  ; Switch to Memory Bank #2             *
                      69                     MOV     PSBANK, #22h   ; Set PSBANK                           *
                      70                     ENDM                                                          *
                      71     ;                                                                             *
                      72     SWITCH3         MACRO                  ; Switch to Memory Bank #3             *
                      73                     MOV     PSBANK, #33h   ; Set PSBANK                           *
                      74                     ENDM                                                          *
                      75     ;                                                                             *
                      76     ;-----------------------------------------------------------------------------*
                      77     ENDIF;                                                                        *
                      78     ;                                                                             *
                      79     ;******************************************************************************
                      80     ;                                                                             *
                      81     ; THEORY OF OPERATION                                                         *
                      82     ; -------------------                                                         *
                      83     ; The section below describes the code generated by BL51 or L251 and the      *
                      84     ; operation of the L51_BANK.A51 module.  BL51/L251 generates for each         *
                      85     ; function that is located in a code memory bank and called from the common   *
                      86     ; area or a different code bank and entry into the INTRABANK CALL TABLE.  The *
                      87     ; INTRABANK CALL TABLE is located in the SEGMENT ?BANK?SELECT and listed in   *
                      88     ; the Linker MAP file. The entries in that TABLE have the following format:   *
                      89     ;                                                                             *
                      90     ;   ?FCT?1:  MOV  DPTR,#FCT     ; Load Address of target FCT                  *
                      91     ;            JMP  ?B_BANKn      ; Switch to Bank and Jump to Target Code      *
                      92     ;                                                                             *
                      93     ; Instead of directly calling the function FCT, the Linker changes the entry  *
                      94     ; to ?FCT?1.  This entry selects the bank where the function FCT is located   *
                      95     ; and calls that function via the routines defined in this L51_BANK.A51 file. *
                      96     ; The L51_BANK.A51 file contains two sets of functions for each bank:         *
                      97     ;                                                                             *
                      98     ; ?B_BANKn    is a routine which saves the entry of the ?B_SWITCHn function   *
                      99     ;             for the current active bank on the STACK and switches to the    *
                     100     ;             bank 'n'.  Then it jumps to the address specified by the DPTR   *
                     101     ;             register.  It is allowed to modify the following registers in   *
                     102     ;             the ?B_BANKn routine:  A, B, R0, DPTR, PSW                      *
                     103     ;                                                                             *
                     104     ; ?B_SWITCHn  is a function which selects the bank 'n'.  This function is     *
                     105     ;             used at the end of a user function to return to the calling     *
                     106     ;             code bank.  Only the following registers may be altered in the  *
                     107     ;             ?B_SWITCHn function:  R0, DPTR                                  *
                     108     ;                                                                             *
                     109     ; The current active bank is stored in ?B_CURRENTBANK.  RTX-51 uses this      *
                     110     ; variable to restore the code bank after a task switch.  To get correct      *
                     111     ; results, ?B_CURRENTBANK must be set to the code bank before the hardware    *
                     112     ; switch is done, or the code banking sequences must be interrupt protected.  *
                     113     ;******************************************************************************
                     114     
                     115                     NAME    ?BANK?SWITCHING
                     116     
                     117                     PUBLIC  ?B_NBANKS, ?B_MODE, ?B_CURRENTBANK, ?B_MASK
                     118                     PUBLIC  ?B_FACTOR, ?B_RST_BANK
                     119     
                     120     ; Standard SFR Symbols required in L51_BANK.A51
  00E0               121     ACC     DATA    0E0H
  00F0               122     B       DATA    0F0H
  0082               123     DPL     DATA    82H
  0083               124     DPH     DATA    83H
A51 MACRO ASSEMBLER  L51_BANK                                                             10/13/2015 11:10:34 PAGE     3

  00A8               125     IE      DATA    0A8H
  00AF               126     EA      BIT     IE.7
                     127     
                     128     
                     129     ; generate Mask and Bank Number Information
                             ELSEIF  ?B_NBANKS <= 4
  0003               133       MASK          EQU     00000011B
                             ENDIF     
                     141     
                     142     
                     143     IF  ?B_MODE = 4 ;**************************************************************
                     144     
  0000               145     ?B_FACTOR       EQU     0               ; Dummy Declarations
  0000               146     ?B_FIRSTBIT     EQU     0
  0003               147     ?B_MASK         EQU     MASK
                     148     
                     149     ?BANK?SELECT    SEGMENT CODE
                     150     ?BANK?DATA      SEGMENT DATA
----                 151                     RSEG    ?BANK?DATA
0000                 152     ?B_CURRENTBANK: DS      1
                     153     
                     154     BANK            MACRO   N
                     155                     PUBLIC  ?B_BANK&N
                     156     ?B_BANK&N:
                     157                     PUSH    ?B_CURRENTBANK
                     158                     MOV     A,#HIGH ?BANK?SWITCH
                     159                     PUSH    ACC
                     160                     PUSH    DPL
                     161                     PUSH    DPH
                     162                     ENDM
                     163     
                     164     SWITCH          MACRO   N
                     165                     PUBLIC  ?B_SWITCH&N
                     166     ?B_SWITCH&N:
                     167                     MOV     ?B_CURRENTBANK,#LOW ?B_SWITCH&N
                     168                     SWITCH&N
                     169                     RET
                     170                     ENDM
                     171     
                     172     
                     173     ?BANK?SWITCH    SEGMENT CODE PAGE
                     174     
----                 175                     RSEG    ?BANK?SWITCH
  0000               176     B_SWITCH_START  EQU     $
                     177     ; Generate ?B_SWITCHn functions
  0000               178     CNT             SET     0
                     179     
                     180                     REPT    ?B_NBANKS
                     181                     BANK    %CNT
                     182                     SWITCH  %CNT
                     183     CNT             SET     CNT+1
                     184                     ENDM
                     185+1                   BANK    %CNT
                     186+2                   PUBLIC  ?B_BANK0
0000                 187+2   ?B_BANK0:
0000 C000     F      188+2                   PUSH    ?B_CURRENTBANK
0002 7400     F      189+2                   MOV     A,#HIGH ?BANK?SWITCH
0004 C0E0            190+2                   PUSH    ACC
0006 C082            191+2                   PUSH    DPL
0008 C083            192+2                   PUSH    DPH
                     193+1                   SWITCH  %CNT
                     194+2                   PUBLIC  ?B_SWITCH0
000A                 195+2   ?B_SWITCH0:
000A 750000   F      196+2                   MOV     ?B_CURRENTBANK,#LOW ?B_SWITCH0
                     197+2                   SWITCH0
000D 75B100          198+3                   MOV     PSBANK, #00h   ; Set PSBANK                           *
A51 MACRO ASSEMBLER  L51_BANK                                                             10/13/2015 11:10:34 PAGE     4

0010 22              199+2                   RET
  0001               200+1   CNT             SET     CNT+1
                     201+1                   BANK    %CNT
                     202+2                   PUBLIC  ?B_BANK1
0011                 203+2   ?B_BANK1:
0011 C000     F      204+2                   PUSH    ?B_CURRENTBANK
0013 7400     F      205+2                   MOV     A,#HIGH ?BANK?SWITCH
0015 C0E0            206+2                   PUSH    ACC
0017 C082            207+2                   PUSH    DPL
0019 C083            208+2                   PUSH    DPH
                     209+1                   SWITCH  %CNT
                     210+2                   PUBLIC  ?B_SWITCH1
001B                 211+2   ?B_SWITCH1:
001B 750000   F      212+2                   MOV     ?B_CURRENTBANK,#LOW ?B_SWITCH1
                     213+2                   SWITCH1
001E 75B111          214+3                   MOV     PSBANK, #11h   ; Set PSBANK                           *
0021 22              215+2                   RET
  0002               216+1   CNT             SET     CNT+1
                     217+1                   BANK    %CNT
                     218+2                   PUBLIC  ?B_BANK2
0022                 219+2   ?B_BANK2:
0022 C000     F      220+2                   PUSH    ?B_CURRENTBANK
0024 7400     F      221+2                   MOV     A,#HIGH ?BANK?SWITCH
0026 C0E0            222+2                   PUSH    ACC
0028 C082            223+2                   PUSH    DPL
002A C083            224+2                   PUSH    DPH
                     225+1                   SWITCH  %CNT
                     226+2                   PUBLIC  ?B_SWITCH2
002C                 227+2   ?B_SWITCH2:
002C 750000   F      228+2                   MOV     ?B_CURRENTBANK,#LOW ?B_SWITCH2
                     229+2                   SWITCH2
002F 75B122          230+3                   MOV     PSBANK, #22h   ; Set PSBANK                           *
0032 22              231+2                   RET
  0003               232+1   CNT             SET     CNT+1
                     233+1                   BANK    %CNT
                     234+2                   PUBLIC  ?B_BANK3
0033                 235+2   ?B_BANK3:
0033 C000     F      236+2                   PUSH    ?B_CURRENTBANK
0035 7400     F      237+2                   MOV     A,#HIGH ?BANK?SWITCH
0037 C0E0            238+2                   PUSH    ACC
0039 C082            239+2                   PUSH    DPL
003B C083            240+2                   PUSH    DPH
                     241+1                   SWITCH  %CNT
                     242+2                   PUBLIC  ?B_SWITCH3
003D                 243+2   ?B_SWITCH3:
003D 750000   F      244+2                   MOV     ?B_CURRENTBANK,#LOW ?B_SWITCH3
                     245+2                   SWITCH3
0040 75B133          246+3                   MOV     PSBANK, #33h   ; Set PSBANK                           *
0043 22              247+2                   RET
  0004               248+1   CNT             SET     CNT+1
                     249     
  0044               250     B_SWITCH_SIZE   EQU     $-B_SWITCH_START
                     251     
                             ENDIF
                     255     
                     256     
                     257     
                     258     COMMON_XDATA    MACRO     ; Switch back to common XDATA bank
                     259                     SWITCH1                        ; Switch to XDATA Bank 1
                     260                     ENDM
                     261     
                     262     
                     263     ENDIF  ; close block IF ?B_MODE = 4 *******************************************
                     264     
----                 265                     RSEG    ?BANK?SELECT
                     266     
A51 MACRO ASSEMBLER  L51_BANK                                                             10/13/2015 11:10:34 PAGE     5

                     267     ;************************  SWITCHBANK FUNCTION  *******************************
                     268     ;                                                                             *
                     269     ; SWITCHBANK allows use of bank-switching for C programs                      *
                     270     ;                                                                             *
                     271     ; prototype:   extern switchbank (unsigned char bank_number);                 *
                     272     ;                                                                             *
                     273     ;******************************************************************************
                     274                     PUBLIC  _SWITCHBANK
                     275     
0000 EF              276     _SWITCHBANK:    MOV     A,R7
                     277     
                     278     IF  ?B_MODE = 4 ;**************************************************************
                     279     
                     280     S_ENTRY         MACRO   N
                     281                     DB      LOW ?B_SWITCH&N
                     282                     ENDM
                     283     
0001                 284     _SWITCHBANK_A:
0001 240A            285                     ADD     A,#switch_tab+3-$
0003 83              286                     MOVC    A,@A+PC
0004 900000   F      287                     MOV     DPTR,#?BANK?SWITCH
0007 73              288                     JMP     @A+DPTR
                     289     
0008                 290     switch_tab:     
  0000               291     CNT             SET     0
                     292     
                     293                     REPT    ?B_NBANKS
                     294                     S_ENTRY %CNT
                     295     CNT             SET     CNT+1
                     296                     ENDM
                     297+1                   S_ENTRY %CNT
0008 00       F      298+2                   DB      LOW ?B_SWITCH0
  0001               299+1   CNT             SET     CNT+1
                     300+1                   S_ENTRY %CNT
0009 00       F      301+2                   DB      LOW ?B_SWITCH1
  0002               302+1   CNT             SET     CNT+1
                     303+1                   S_ENTRY %CNT
000A 00       F      304+2                   DB      LOW ?B_SWITCH2
  0003               305+1   CNT             SET     CNT+1
                     306+1                   S_ENTRY %CNT
000B 00       F      307+2                   DB      LOW ?B_SWITCH3
  0004               308+1   CNT             SET     CNT+1
                     309     ENDIF  ; close block IF ?B_MODE = 4 *******************************************
                     310     
                     311     
A51 MACRO ASSEMBLER  L51_BANK                                                             10/13/2015 11:10:34 PAGE     6

XREF SYMBOL TABLE LISTING
---- ------ ----- -------


N A M E             T Y P E  V A L U E   ATTRIBUTES / REFERENCES

?BANK?DATA . . . .  D SEG    0001H       REL=UNIT   150# 151
?BANK?SELECT . . .  C SEG    000CH       REL=UNIT   149# 265
?BANK?SWITCH . . .  C SEG    0044H       REL=PAGE   173# 175 189 205 221 237 287
?BANK?SWITCHING. .  N NUMB   -----          115
?B_BANK0 . . . . .  C ADDR   0000H   R   SEG=?BANK?SWITCH   186 187#
?B_BANK1 . . . . .  C ADDR   0011H   R   SEG=?BANK?SWITCH   202 203#
?B_BANK2 . . . . .  C ADDR   0022H   R   SEG=?BANK?SWITCH   218 219#
?B_BANK3 . . . . .  C ADDR   0033H   R   SEG=?BANK?SWITCH   234 235#
?B_CURRENTBANK . .  D ADDR   0000H   R   SEG=?BANK?DATA   117 152# 188 196 204 212 220 228 236 244
?B_FACTOR. . . . .  N NUMB   0000H   A      118 145#
?B_FIRSTBIT. . . .  N NUMB   0000H   A      146#
?B_MASK. . . . . .  N NUMB   0003H   A      117 147#
?B_MODE. . . . . .  N NUMB   0004H   A      13# 34 117 143 278
?B_NBANKS. . . . .  N NUMB   0004H   A      9# 117 130 132 134 136 180 293
?B_RST_BANK. . . .  N NUMB   00FFH   A      26# 118
?B_RTX . . . . . .  N NUMB   0000H   A      17#
?B_SWITCH0 . . . .  C ADDR   000AH   R   SEG=?BANK?SWITCH   194 195# 196 298
?B_SWITCH1 . . . .  C ADDR   001BH   R   SEG=?BANK?SWITCH   210 211# 212 301
?B_SWITCH2 . . . .  C ADDR   002CH   R   SEG=?BANK?SWITCH   226 227# 228 304
?B_SWITCH3 . . . .  C ADDR   003DH   R   SEG=?BANK?SWITCH   242 243# 244 307
?B_VAR_BANKING . .  N NUMB   0000H   A      20#
ACC. . . . . . . .  D ADDR   00E0H   A      121# 190 206 222 238
B. . . . . . . . .  D ADDR   00F0H   A      122#
B_SWITCH_SIZE. . .  N NUMB   0044H   A      250# 252
B_SWITCH_START . .  C ADDR   0000H   R   SEG=?BANK?SWITCH   176# 250
CNT. . . . . . . .  N NUMB   0004H   A      178# 185 193 200# 200 201 209 216# 216 217 225 232# 232 233 241 248# 248
                                           291# 297 299# 299 300 302# 302 303 305# 305 306 308# 308
DPH. . . . . . . .  D ADDR   0083H   A      124# 192 208 224 240
DPL. . . . . . . .  D ADDR   0082H   A      123# 191 207 223 239
EA . . . . . . . .  B ADDR   00A8H.7 A      126#
IE . . . . . . . .  D ADDR   00A8H   A      125# 126
MASK . . . . . . .  N NUMB   0003H   A      133# 147
PSBANK . . . . . .  D ADDR   00B1H   A      58# 198 214 230 246
SWITCH_TAB . . . .  C ADDR   0008H   R   SEG=?BANK?SELECT   285 290#
_SWITCHBANK. . . .  C ADDR   0000H   R   SEG=?BANK?SELECT   274 276#
_SWITCHBANK_A. . .  C ADDR   0001H   R   SEG=?BANK?SELECT   284#


REGISTER BANK(S) USED: 0 


ASSEMBLY COMPLETE.  0 WARNING(S), 0 ERROR(S)
